### 비즈니스 요구사항 정리
<h2> 웹 어플리케이션 계층 구조 </h2>
    - 컨트롤러 - api만들거나 등등
    - 서비스 - 회원은 중복 가입이 안된다는 로직들이 들어감 / 비즈니스 도메인 객체를 가지고 핵심 비즈니스 로직이 동작하도록 구현한 계층
    - 도메인 -
    - 리포지토리 -

- 클래스 의존 관계
    - 회원 리포지토리는 interface로 설계할 예정 → 아직 데이터 저장소가 선정되지 않았기 때문 / 데이터 저장소가 정해지면 변경이 가능

- 주어진 코드가 동작하는지 알아보는 방법 = testcase 작성해보기!
    - 자바의 main메서드를 통해 실행
    - 웹 어플리케이션 컨트롤러를 통해 해당 기능을 실행
    - → 위 두가지의 경우, 준비하고 실행하는데 오래걸리고 반복 실행하기 어려움
    - ⇒ JUnit이라는 프레임워크로 테스트를 실행해 이러한 문제를 해결한다.

### **회원 도메인과 리포지토리 만들기**

- `afterEach()` → test가 끝날 때마다 저장소를 지움 / 순서가 상관 X

### **회원 리포지토리 테스트 케이스 작성**

- mvc - model / view / controller
